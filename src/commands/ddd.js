const axios = require("axios");

function spintax(text) {
  return text.replace(/{([^{}]*)}/g, (_, group) => {
    const choices = group.split("|");
    return choices[Math.floor(Math.random() * choices.length)];
  });
}

module.exports = async function handleDDD(msg, sock, args) {
  const ddd = args.join(" ").replace("!ddd", "").trim().replace(/\D/g, ""); // Remove caracteres n√£o num√©ricos

  // Valida o DDD
  if (!/^\d{2}$/.test(ddd)) {
    const errorMessage =
      "‚ö† {Ei|Ops|Opa|Desculpe|Foi mal}, o DDD fornecido √© inv√°lido. " +
      "Por favor, insira um DDD v√°lido de *2 d√≠gitos* e tente novamente.";
    await sock.sendMessage(msg.key.remoteJid, { text: spintax(errorMessage) });
    return;
  }

  try {
    // Faz a requisi√ß√£o na BrasilAPI
    const { data } = await axios.get(
      `https://brasilapi.com.br/api/ddd/v1/${ddd}`
    );
    const { state, cities } = data;

    // Monta a resposta com as informa√ß√µes
    const response =
      `üìû *Informa√ß√µes do DDD ${ddd}:*\n\n` +
      `üó∫Ô∏è *Estado:* ${state}\n` +
      `üèôÔ∏è *Cidades:*\n${cities
        .reverse()
        .map((city) => `- ${city}`)
        .join("\n")}\n\n` +
      `_Consultado com o bot do Pedro._`;

    // Envia a mensagem com as informa√ß√µes
    await sock.sendMessage(msg.key.remoteJid, { text: spintax(response) });
  } catch (error) {
    // Loga o erro e informa ao usu√°rio
    console.warn("API: BrasilAPI/DDD error!", error.message);
    const reply =
      "‚ö† Desculpe, n√£o consegui obter informa√ß√µes para o DDD fornecido. " +
      "Por favor, verifique se est√° correto e tente novamente.";
    await sock.sendMessage(msg.key.remoteJid, { text: reply });
  }
};
